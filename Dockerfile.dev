# Based on http://blog.codeship.com/running-rails-developmient-environment-docker/
#
FROM ruby:2.3.3-slim

MAINTAINER mbajur@gmail.com

# Install apt based dependencies required to run Rails as
# well as RubyGems. As the Ruby image itself is based on a
RUN apt-get update && apt-get install -y \
  build-essential \
  cmake \
  git \
  libpq-dev \
  curl \
  python \
  pkg-config \
  imagemagick

# Set app home
ENV APP_HOME=/app

# Configure the main working directory. This is the base
# directory used in any further RUN, COPY, and ENTRYPOINT
# commands.
RUN mkdir -p $APP_HOME
WORKDIR $APP_HOME

# Copy the Gemfile as well as the Gemfile.lock and install
# the RubyGems. This is a separate step so the dependencies
# will be cached unless changes to one of those two files
# are made.
COPY Gemfile* ./

#ENV BUNDLE_GEMFILE=$APP_HOME/Gemfile \
#  BUNDLE_PATH=/bundle
RUN gem install bundler
RUN bundle install --jobs 20 --retry 5

# Copy the main application.
COPY . ./

# Expose port 3000 to the Docker host, so we can access it
# from the outside.
EXPOSE 3000

# The main command to run when the container starts. Also
# tell the Rails dev server to bind to all interfaces by
# default.
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]

# Create healthcheck
HEALTHCHECK CMD curl --fail http://0.0.0.0:3000/healthcheck || exit 1
